/****************************************************************************************************************************************************************
** 版权:          2017-2027,深圳市信为科技发展有限公司
** 文件名:        stm32l0_eeprom.h
** 作者:          庄明群
** 版本:          V1.0.0
** 日期:          2017-05-03
** 描述:          从STM32L072的EEPROM中读取系统内部参数
** 功能:          系统参数读取与处理
*****************************************************************************************************************************************************************
** 修改者:        No
** 版本:          No
** 修改内容:      No
** 日期:          No
****************************************************************************************************************************************************************/

#ifndef __STM32L0_EEPROM_H
#define __STM32L0_EEPROM_H

#include "stm32l0xx_hal_flash.h"
#include "stm32l0xx_hal_flash_ex.h"
#include "stm32l0xx_hal.h"
#include "VariaType.h"

#define EEPROM_START                      0x0000                                //EEPROM起始地址
#define EEPROM_END                        0x17FF                                //EEPROM结束地址

#define EEPROM_WR_ENABLE                  0x0F                                  //EEPROM写操作使能
#define EEPROM_WR_DISABLE                 0x00                                  //EEPROM写操作禁止

#define WRITE_EEPROM_ERR_MAX              0x03                                  //写EEPROM错误最大次数

extern UserParaTypeDef UserParam;                                              //用户参数
extern UsartParaTypeDef UsartParam;                                            //串口Usart参数
extern RunVarParaTypeDef RunVarParam;                                          //系统运行参数
extern ProductParaTypeDef ProductParam;                                        //产品参数

//****************************************************************************************************************************************************************
// 名称               :Eeprom_Read_OneByte()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :从STM32L072xx内部EEPROM指定位置读取一字节数据
// 输入参数           :EepAddr（读取地址）
// 输出参数           :无
// 返回结果           :返回字节
// 注意和说明         :地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

uint8_t Eeprom_Read_OneByte(uint16_t EepAddr);

//****************************************************************************************************************************************************************
// 名称               :Eeprom_EraseOneByte()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :向STM32L072xx内部EEPROM指定位置擦除一字节
// 输入参数           :EepAddr（擦除地址）
// 输出参数           :无
// 返回结果           :0(擦除成功)，1(擦除失败)
// 注意和说明         :擦除参数前请打开EEPROM写参数使能；地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

uint8_t Eeprom_EraseOneByte(uint16_t EepAddr);

//****************************************************************************************************************************************************************
// 名称               :Eeprom_Write_OneByte()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :向STM32L072xx内部EEPROM指定位置写入一字节数据
// 输入参数           :EepAddr（写入地址），WrData（写入数据）
// 输出参数           :无
// 返回结果           :0（写入成功），1（写入失败）
// 注意和说明         :写参数前请打开EEPROM写参数使能；地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

uint8_t Eeprom_Write_OneByte(uint16_t EepAddr, uint8_t WrData);

//****************************************************************************************************************************************************************
// 名称               :Eeprom_Write_MultiBytes()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :向STM32L072xx内部EEPROM指定位置写多个字节
// 输入参数           :EepAddr(写起始地址)，pWrbuf(固定数据内存),Wrlen(写数据长度)
// 输出参数           :无
// 返回结果           :0(写入成功)，1(写入失败)
// 注意和说明         :写参数前请打开EEPROM写参数使能；地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

uint8_t Eeprom_Write_MultiBytes(uint16_t EepAddr, uint8_t const *pWrbuf, uint16_t Wrlen);

//****************************************************************************************************************************************************************
// 名称               :Eeprom_Read_MultiBytes()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :从STM32L072xx内部EEPROM指定位置读多个字节
// 输入参数           :EepAddr(读起始地址)，Rdlen(读数据长度)
// 输出参数           :pRdbuf(数据读内存)
// 返回结果           :无
// 注意和说明         :地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void Eeprom_Read_MultiBytes(uint16_t EepAddr, uint8_t *pRdbuf, uint16_t Rdlen);

//****************************************************************************************************************************************************************
// 名称               :Eeprom_Erase_MultiBytes()
// 创建日期           :2017-05-03
// 作者               :庄明群
// 功能               :向STM32L072xx内部EEPROM指定位置擦除多字节
// 输入参数           :EepAddr(擦除起始地址)，Eslen(擦除长度)
// 输出参数           :无
// 返回结果           :0(擦除成功)，1(擦除失败)
// 注意和说明         :擦除参数前请打开EEPROM写参数使能；地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

uint8_t Eeprom_Erase_MultiBytes(uint16_t EepAddr, uint16_t Eslen);

//#ifdef  USE_FULL_ASSERT
/**
  * @brief  The assert_param macro is used for function's parameters check.
  * @param  expr: If expr is false, it calls assert_failed function
  *         which reports the name of the source file and the source
  *         line number of the call that failed. 
  *         If expr is true, it returns no value.
  * @retval None
  */
//  #define assert_param(expr) ((expr) ? (void)0 : assert_failed((uint8_t *)__FILE__, __LINE__))
/* Exported functions ------------------------------------------------------- */
//  void assert_failed(uint8_t* file, uint32_t line);
//#else
//  #define assert_param(expr) ((void)0)
//#endif /* USE_FULL_ASSERT */
  
#endif