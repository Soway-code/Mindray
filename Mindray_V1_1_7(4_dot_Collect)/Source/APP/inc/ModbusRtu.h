/****************************************************************************************************************************************************************
** 版权:          2017-2027,深圳市信为科技发展有限公司
** 文件名:        ModbusRtu.h
** 作者:          庄明群
** 版本:          V1.0.0
** 日期:          2017-05-08
** 描述:          Modbus RTU 通信协议
** 功能:          读写参数报文处理、标定功能、采集数据交互
*****************************************************************************************************************************************************************
** 修改者:        No
** 版本:          No
** 修改内容:      No
** 日期:          No
****************************************************************************************************************************************************************/

#ifndef __MODBUSRTU_H
#define __MODBUSRTU_H

#include "stm32l0_usart_app.h"
#include "stm32l0_eeprom_app.h"
#include "stm32l0_adc_app.h"
#include "stm32l0_dac_app.h"


#define BROADCASTADDR                     0x00                                  //广播地址

#define HOLDING_REG_REGION1_BGEIN         0x0030                                //保持寄存器起始地址1
#define HOLDING_REG_REGION1_END           0x0041                                //保持寄存器结束地址1

#define INPUT_REG_REGION1_BEGIN           0x0000                                //输入寄存器起始地址1
#define INPUT_REG_REGION1_END             0x0006                                //输入寄存器结束地址1
#define INPUT_REG_REGION2_BEGIN           0x0080                                //输入寄存器起始地址2
#define INPUT_REG_REGION2_END             0x0080                                //输入寄存器结束地址2

#define SINGLE_COIL_REGION1_BEGIN         0x0050                                //单个线圈寄存器起始地址1
#define SINGLE_COIL_REGION1_END           0x0052                                //单个线圈寄存器结束地址1

#define SPECIAL_COIL_REGION1_BEGIN        0x0000                                //特殊寄存器起始地址1
#define SPECIAL_COIL_REGION1_END          0x0005                                //特殊寄存器结束地址1

#define MUL_REG_REGION1_BEGIN             0x0030                                //多个寄存器起始地址1
#define MUL_REG_REGION1_END               0x0041                                //多个寄存器结束地址1

#define DEF_MUL_REG_REGION1_BEGIN         0x0080                                //自定义26/27功能码寄存器起始地址1
#define DEF_MUL_REG_REGION1_END           0x0086                                //自定义26/27功能码寄存器结束地址1
#define DEF_MUL_REG_REGION2_BEGIN         0x0090                                //自定义26/27功能码寄存器起始地址2
#define DEF_MUL_REG_REGION2_END           0x0096                                //自定义26/27功能码寄存器结束地址2
#define DEF_MUL_REG_REGION3_BEGIN         0x00B0                                //自定义26/27功能码寄存器起始地址3
#define DEF_MUL_REG_REGION3_END           0x00C0                                //自定义26/27功能码寄存器结束地址3

#define MUL_VERSION_INF_BEGIN             0x00E0                                //版本信息起始地址
#define MUL_VERSION_INF_END               0x00E5                                //版本信息结束地址

#define MB_NONE_EXCEPTION                 0x00                                  //Modbus无异常
#define MB_FUNC_EXCEPTION                 0x01                                  //Modbus功能码无效
#define MB_ADDR_EXCEPTION                 0x02                                  //Modbus访问地址失败
#define MB_VALU_EXCEPTION                 0x03                                  //Modbus访问数值无效
#define MB_DEVC_EXCEPTION                 0x04                                  //Modbus访问设备失败
#define MB_ACKN_EXCEPTION                 0x05                                  //Modbus访问设备无应答
#define MB_BUSY_EXCEPTION                 0x06                                  //Modbus访问设备忙
#define MB_PARI_EXCEPTION                 0x08                                  //Modbus设备校验错误
#define MB_REQ_FAILURE                    0x80                                  //Modbus请求错误

#define CALIB_CAPMIN_FLAG                 0x01                                  //标定电容零点标志
#define CALIB_CAPLOW_FLAG                 0x02                                  //标定电容下刻度标志
#define CALIB_CAPHIGH_FLAG                0x10                                  //标定电容上刻度标志
#define CALIB_CAPMAX_FLAG                 0x20                                  //标定电容满度标志
#define CALIB_CAPEOC_FLAG                 0x33                                  //标点电容结束标志

#define CALIB_CAPADMIN_FLAG               0x01                                  //标定电容AD零点标志
#define CALIB_CAPADLOW_FLAG               0x02                                  //标定电容AD下刻度标志
#define CALIB_CAPADHIH_FLAG               0x10                                  //标定电容AD上刻度标志
#define CALIB_CAPADMAX_FLAG               0x20                                  //标定电容AD满度标志
#define CALIB_CAPADEOC_FLAG               0x33                                  //标定电容AD结束标志

#define CALIB_CAPDAMIN_FLAG               0x01                                  //标定电容DA零点标志
#define CALIB_CAPDALOW_FLAG               0x02                                  //标定电容DA下刻度标志
#define CALIB_CAPDAHIH_FLAG               0x10                                  //标定电容DA上刻度标志
#define CALIB_CAPDAMAX_FLAG               0x20                                  //标定电容DA满度标志
#define CALIB_CAPDAEOC_FLAG               0x33                                  //标定电容DA结束标志

#define CALIB_TEMPDAMIN_FLAG              0x01                                  //标定温度DA零点标志
#define CALIB_TEMPDAMAX_FLAG              0x10                                  //标定温度DA满度标志
#define CALIB_TEMPDAEOC_FLAG              0x11                                  //标定温度结束标志

extern uint8_t SenBufLen;                                                       //发送缓存数据长度
extern uint8_t RcvBufLen;                                                       //接收缓存数据长度
extern uint8_t UsartRecvOk;                                                     //串口接收完成标志
extern uint8_t SenBuf[USART1_MAX_DATALEN];                                      //串口发送缓存
extern uint8_t RcvBuf[USART1_MAX_DATALEN];                                      //串口接收缓存
extern UART_HandleTypeDef UART_HandleStruct;                                    //串口处理结构体

//****************************************************************************************************************************************************************
// 名称               :SensorEvent()
// 创建日期           :2017-05-14
// 作者               :庄明群
// 功能               :传感器事件处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :
// 修改内容           :
//****************************************************************************************************************************************************************

void SensorEvent(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc03()
// 创建日期           :2017-05-10
// 作者               :庄明群
// 功能               :Modbus 03功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc03(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc04()
// 创建日期           :2017-05-10
// 作者               :庄明群
// 功能               :Modbus 04功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc04(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc05()
// 创建日期           :2017-05-10
// 作者               :庄明群
// 功能               :Modbus 05功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :写操作时先要打开EEPROM写操作使能，寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc05(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc10()
// 创建日期           :2017-05-10
// 作者               :庄明群
// 功能               :Modbus 10功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :写操作时先要打开EEPROM写操作使能，寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************
void ModbusFunc10(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc25()
// 创建日期           :2017-05-11
// 作者               :庄明群
// 功能               :Modbus 25功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :写操作时先要打开EEPROM写操作使能，寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc25(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc26()
// 创建日期           :2017-05-11
// 作者               :庄明群
// 功能               :Modbus 26功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc26(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc27()
// 创建日期           :2017-05-12
// 作者               :庄明群
// 功能               :Modbus 27功能码消息帧处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :写操作时先要打开EEPROM写操作使能，寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc27(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc2A()
// 创建日期           :2017-05-13
// 作者               :庄明群
// 功能               :Modbus 2A功能码消息帧处理,写版本信息
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :写操作时先要打开EEPROM写操作使能，寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc2A(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusFunc2B()
// 创建日期           :2017-05-13
// 作者               :庄明群
// 功能               :Modbus 2B功能码消息帧处理,读版本信息
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :寄存器地址不能越界
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusFunc2B(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusHandle()
// 创建日期           :2017-05-15
// 作者               :庄明群
// 功能               :Modbus RTU消息帧处理函数
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusHandle(void);

//****************************************************************************************************************************************************************
// 名称               :ModbusAutoUpload()
// 创建日期           :2017-05-13
// 作者               :庄明群
// 功能               :Modbus 消息帧自动上传处理
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :
// 修改内容           :
//****************************************************************************************************************************************************************

void ModbusAutoUpload(void);

//****************************************************************************************************************************************************************
// 名称               :MB_Cap_Calibration()
// 创建日期           :2017-05-15
// 作者               :庄明群
// 功能               :电容标定功能
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :
// 修改内容           :
//****************************************************************************************************************************************************************

void MB_Cap_Calibration(void);

//****************************************************************************************************************************************************************
// 名称               :MB_CapAD_Calibration()
// 创建日期           :2017-05-15
// 作者               :庄明群
// 功能               :电容AD值标定功能
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :标定值不能超过65535
// 修改内容           :
//****************************************************************************************************************************************************************

void MB_CapAD_Calibration(void);

//****************************************************************************************************************************************************************
// 名称               :MB_CapDAOut_Calibration()
// 创建日期           :2017-05-15
// 作者               :庄明群
// 功能               :电容DA值标定功能
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :标定值不能超过4095
// 修改内容           :
//****************************************************************************************************************************************************************

void MB_CapDAOut_Calibration(void);

//****************************************************************************************************************************************************************
// 名称               :MB_TempDAOut_Calibration()
// 创建日期           :2017-05-15
// 作者               :庄明群
// 功能               :温度DA值标定功能
// 输入参数           :无
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :标定值不能超过4095
// 修改内容           :
//****************************************************************************************************************************************************************

void MB_TempDAOut_Calibration(void);

//****************************************************************************************************************************************************************
// 名称               :MDB_Get_CRC16()
// 创建日期           :2017-05-08
// 作者               :庄明群
// 功能               :对输入的消息帧进行CRC16校验
// 输入参数           :Msg(消息首地址)，MsgLen(消息帧长度)
// 输出参数           :无
// 返回结果           :CRC16校验码
// 注意和说明         :消息长度不能为0
// 修改内容           :
//****************************************************************************************************************************************************************

uint16_t MDB_Get_CRC16(uint8_t *Msg,uint16_t MsgLen);

//****************************************************************************************************************************************************************
// 名称               :MDB_Snd_Msg_RTU()
// 创建日期           :2017-05-08
// 作者               :庄明群
// 功能               :发送 Modbus RTU消息帧
// 输入参数           :pMsg(消息首地址)，len(消息帧长度)
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :消息长度不能为0，发送时先解冻设备，设备地址不能为广播地址
// 修改内容           :
//****************************************************************************************************************************************************************

void MDB_Snd_Msg_RTU(uint8_t *pMsg, uint16_t len);

//****************************************************************************************************************************************************************
// 名称               :MDB_Snd_Msg_RTU_NoLimit()
// 创建日期           :2017-05-08
// 作者               :庄明群
// 功能               :发送 Modbus RTU消息帧(无设备地址限制)
// 输入参数           :pMsg(消息首地址)，len(消息帧长度)
// 输出参数           :无
// 返回结果           :无
// 注意和说明         :消息长度不能为0，发送时先解冻设备
// 修改内容           :
//****************************************************************************************************************************************************************

void MDB_Snd_Msg_RTU_NoLimit(uint8_t *pMsg, uint16_t len);

#endif
